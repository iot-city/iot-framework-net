# The network configuration template file is used to configure the net framework information.
# The default external file to load: "framework-net.properties".
# For: org.iotcity.iot.framework.net.NetConfigure
# See: http://www.iot-city.org

# Define network configuration identifiers (the property key must be "iot.framework.net").
iot.framework.net=true

# ======================= The thread pool configuration =======================

# Whether to enable a stand alone task handler thread pool in global net manager.
# When set it to false or without this option, the default pool options is used.
iot.framework.net.pool=true
# The number of threads to keep in the pool (128 by default).
iot.framework.net.pool.corePoolSize=128
# The maximum number of threads to allow in the pool (1024 by default).
iot.framework.net.pool.maximumPoolSize=1024
# The maximum seconds that excess idle threads will wait for new tasks before terminating (60s by default).
iot.framework.net.pool.keepAliveTime=60
# The capacity of blocking queue to cache tasks in thread pool executor (25600 by default).
iot.framework.net.pool.capacity=10240

# ======================== The sessions configuration ========================

# Setup session group configuration.
iot.framework.net.sessions=session.user, session.iotxxx
# The USER session group configuration.
session.user.groupID=USER
session.user.enabled=true
session.user.maximums=1000
session.user.timeout=60000
session.user.proxy=org.iotcity.iot.framework.net.session.DefaultSessionProxy
# The IOTXXX session group configuration.
session.iotxxx.groupID=IOTXXX
session.iotxxx.enabled=
session.iotxxx.maximums=
session.iotxxx.timeout=
session.iotxxx.proxy=

# ======================== The services configuration ========================

# SETUP SERVICES CONFIGURATION.
# Define the service configurations by using property keys.
iot.framework.net.services=service.http, service.netty

# --------------------- The example for HTTPS service -----------------------

# THE SERVICE CONFIGURATION.
# The service unique identification (required, can not be null or empty).
service.http.serviceID=HTTPS
# Indicates whether the current service is enabled (true by default).
service.http.enabled=true
# The service instance class (required, can not be null).
service.http.instance=org.iotcity.iot.framework.net.tomcat.TomcatService
# Indicates whether the service starts automatically after configuration (true by default).
service.http.autoStart=true
# The delayed start time in milliseconds for automatically starting the service (0 ms by default).
service.http.autoStartDelay=0

# THE SERVICE OPTIONS CONFIGURATION.
# When set it to false, will skip the options analyze (true value by default).
service.http.options=true

# THE SERVICE SPECIFIC CONFIGURATION FILE.
# The configure properties file to load (required, can not be null or empty).
service.http.options.config.file=framework-net-service-http.properties
# Whether to load the properties file from package (false by default).
service.http.options.config.fromPackage=false
# The configure properties file text encoding (optional, e.g. "UTF-8", if it is set to empty, it will be judged automatically).
service.http.options.config.encoding=

# THE SERVICE GLOBAL INBOUND OBJECTS CONFIGURATION.
# Define the inbound configurations by using property keys.
service.http.options.inbounds=api, test
# The service inbound instance class (required, can not be null).
service.http.options.inbounds.api.instance=org.iotcity.iot.framework.net.tomcat.inbounds.JsonInbound
# The service inbound message processing priority (the priority with the highest value is called first, 0 by default).
service.http.options.inbounds.api.priority=1
# The service inbound instance class (required, can not be null).
service.http.options.inbounds.test.instance=org.iotcity.iot.framework.net.tomcat.inbounds.TestInbound
# The service inbound message processing priority (the priority with the highest value is called first, 0 by default).
service.http.options.inbounds.test.priority=0

# THE SERVICE GLOBAL OUTBOUND OBJECTS CONFIGURATION.
# Define the outbound configurations by using property keys.
service.http.options.outbounds=api, test
# The service outbound instance class (required, can not be null).
service.http.options.outbounds.api.instance=org.iotcity.iot.framework.net.tomcat.outbounds.JsonOutbound
# The service outbound message processing priority (the priority with the highest value is called first, 0 by default).
service.http.options.outbounds.api.priority=1
# The service outbound instance class (required, can not be null).
service.http.options.outbounds.test.instance=org.iotcity.iot.framework.net.tomcat.outbounds.TestOutbound
# The service outbound message processing priority (the priority with the highest value is called first, 0 by default).
service.http.options.outbounds.test.priority=0

# THE SERVICE ADDITIONAL OPTIONS.
# The service monitoring interval in milliseconds for channel status check (10000 ms by default).
service.http.options.monitoringInterval=10000





